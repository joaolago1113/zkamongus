{"noir_version":"1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a","hash":6922491108322419616,"abi":{"parameters":[{"name":"input_state","type":{"kind":"struct","path":"zk_amongus::GameState","fields":[{"name":"game_ended","type":{"kind":"boolean"}},{"name":"turn_count","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"all_players_public","type":{"kind":"array","length":3,"type":{"kind":"struct","path":"zk_amongus::player_state::PlayerPublicInfo","fields":[{"name":"player_id","type":{"kind":"field"}},{"name":"game_player_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"status","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"section_id","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"mpc_state","type":{"kind":"struct","path":"zk_amongus::mpclib::selective_disclosure::selective_disclosure::RoundState","fields":[{"name":"round_number","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"user_encrypt_secret_hashes","type":{"kind":"array","length":3,"type":{"kind":"field"}}},{"name":"user_mask_secret_hashes","type":{"kind":"array","length":3,"type":{"kind":"field"}}},{"name":"previous_output_states","type":{"kind":"array","length":3,"type":{"kind":"struct","path":"zk_amongus::mpclib::selective_disclosure::selective_disclosure::UserOutputState","fields":[{"name":"ciphertext","type":{"kind":"struct","path":"zk_amongus::mpclib::common::crypto::Ciphertext","fields":[{"name":"data","type":{"kind":"array","length":128,"type":{"kind":"field"}}}]}},{"name":"mask_commitments","type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}},{"name":"user_updated_mask_commitments","type":{"kind":"array","length":3,"type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}}}]}}}]}}]},"visibility":"private"},{"name":"user_state","type":{"kind":"struct","path":"zk_amongus::UserState","fields":[{"name":"my_player_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"private_info","type":{"kind":"struct","path":"zk_amongus::player_state::PlayerPrivateInfo","fields":[{"name":"role","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypt_secret","type":{"kind":"field"}},{"name":"mask_secret","type":{"kind":"field"}},{"name":"voted_for_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"encrypt_secret","type":{"kind":"field"}},{"name":"mask_secret","type":{"kind":"field"}},{"name":"all_players_public_view","type":{"kind":"array","length":3,"type":{"kind":"struct","path":"zk_amongus::player_state::PlayerPublicInfo","fields":[{"name":"player_id","type":{"kind":"field"}},{"name":"game_player_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"status","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"section_id","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"visible_sections","type":{"kind":"array","length":9,"type":{"kind":"integer","sign":"unsigned","width":32}}}]},"visibility":"private"},{"name":"move_data","type":{"kind":"struct","path":"zk_amongus::MoveData","fields":[{"name":"target_section","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"}],"return_type":{"abi_type":{"kind":"tuple","fields":[{"kind":"struct","path":"zk_amongus::GameState","fields":[{"name":"game_ended","type":{"kind":"boolean"}},{"name":"turn_count","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"all_players_public","type":{"kind":"array","length":3,"type":{"kind":"struct","path":"zk_amongus::player_state::PlayerPublicInfo","fields":[{"name":"player_id","type":{"kind":"field"}},{"name":"game_player_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"status","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"section_id","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"mpc_state","type":{"kind":"struct","path":"zk_amongus::mpclib::selective_disclosure::selective_disclosure::RoundState","fields":[{"name":"round_number","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"user_encrypt_secret_hashes","type":{"kind":"array","length":3,"type":{"kind":"field"}}},{"name":"user_mask_secret_hashes","type":{"kind":"array","length":3,"type":{"kind":"field"}}},{"name":"previous_output_states","type":{"kind":"array","length":3,"type":{"kind":"struct","path":"zk_amongus::mpclib::selective_disclosure::selective_disclosure::UserOutputState","fields":[{"name":"ciphertext","type":{"kind":"struct","path":"zk_amongus::mpclib::common::crypto::Ciphertext","fields":[{"name":"data","type":{"kind":"array","length":128,"type":{"kind":"field"}}}]}},{"name":"mask_commitments","type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}},{"name":"user_updated_mask_commitments","type":{"kind":"array","length":3,"type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}}}]}}}]}}]},{"kind":"struct","path":"zk_amongus::MoveHashes","fields":[{"name":"input_game_state_hash","type":{"kind":"field"}},{"name":"input_user_state_hash","type":{"kind":"field"}},{"name":"output_game_state_hash","type":{"kind":"field"}},{"name":"output_user_state_hash","type":{"kind":"field"}}]}]},"visibility":"public"},"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"},"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"6416732085233123029":{"error_kind":"string","string":"Move destination X out of bounds"},"6485997221020871071":{"error_kind":"string","string":"call to assert_max_bit_size"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"},"9025272182387217267":{"error_kind":"string","string":"Move destination Y out of bounds"},"10305308695560863868":{"error_kind":"string","string":"Move target is not the same or an adjacent section"},"12486098489881909129":{"error_kind":"string","string":"Cannot move when dead"},"13464131493562364363":{"error_kind":"string","string":"Game already ended"},"17843811134343075018":{"error_kind":"string","string":"Stack too deep"}}},"bytecode":"","debug_symbols":"","file_map":{"16":{"source":"use crate::cmp::Eq;\nuse crate::ops::arith::{Add, Neg, Sub};\n\n/// A point on the embedded elliptic curve\n/// By definition, the base field of the embedded curve is the scalar field of the proof system curve, i.e the Noir Field.\n/// x and y denotes the Weierstrass coordinates of the point, if is_infinite is false.\npub struct EmbeddedCurvePoint {\n    pub x: Field,\n    pub y: Field,\n    pub is_infinite: bool,\n}\n\nimpl EmbeddedCurvePoint {\n    /// Elliptic curve point doubling operation\n    /// returns the doubled point of a point P, i.e P+P\n    pub fn double(self) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, self)\n    }\n\n    /// Returns the null element of the curve; 'the point at infinity'\n    pub fn point_at_infinity() -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    }\n}\n\nimpl Add for EmbeddedCurvePoint {\n    /// Adds two points P+Q, using the curve addition formula, and also handles point at infinity\n    fn add(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, other)\n    }\n}\n\nimpl Sub for EmbeddedCurvePoint {\n    /// Points subtraction operation, using addition and negation\n    fn sub(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        self + other.neg()\n    }\n}\n\nimpl Neg for EmbeddedCurvePoint {\n    /// Negates a point P, i.e returns -P, by negating the y coordinate.\n    /// If the point is at infinity, then the result is also at infinity.\n    fn neg(self) -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: self.x, y: -self.y, is_infinite: self.is_infinite }\n    }\n}\n\nimpl Eq for EmbeddedCurvePoint {\n    /// Checks whether two points are equal\n    fn eq(self: Self, b: EmbeddedCurvePoint) -> bool {\n        (self.is_infinite & b.is_infinite)\n            | ((self.is_infinite == b.is_infinite) & (self.x == b.x) & (self.y == b.y))\n    }\n}\n\n/// Scalar for the embedded curve represented as low and high limbs\n/// By definition, the scalar field of the embedded curve is base field of the proving system curve.\n/// It may not fit into a Field element, so it is represented with two Field elements; its low and high limbs.\npub struct EmbeddedCurveScalar {\n    pub lo: Field,\n    pub hi: Field,\n}\n\nimpl EmbeddedCurveScalar {\n    pub fn new(lo: Field, hi: Field) -> Self {\n        EmbeddedCurveScalar { lo, hi }\n    }\n\n    #[field(bn254)]\n    pub fn from_field(scalar: Field) -> EmbeddedCurveScalar {\n        let (a, b) = crate::field::bn254::decompose(scalar);\n        EmbeddedCurveScalar { lo: a, hi: b }\n    }\n\n    //Bytes to scalar: take the first (after the specified offset) 16 bytes of the input as the lo value, and the next 16 bytes as the hi value\n    #[field(bn254)]\n    pub(crate) fn from_bytes(bytes: [u8; 64], offset: u32) -> EmbeddedCurveScalar {\n        let mut v = 1;\n        let mut lo = 0 as Field;\n        let mut hi = 0 as Field;\n        for i in 0..16 {\n            lo = lo + (bytes[offset + 31 - i] as Field) * v;\n            hi = hi + (bytes[offset + 15 - i] as Field) * v;\n            v = v * 256;\n        }\n        let sig_s = crate::embedded_curve_ops::EmbeddedCurveScalar { lo, hi };\n        sig_s\n    }\n}\n\nimpl Eq for EmbeddedCurveScalar {\n    fn eq(self, other: Self) -> bool {\n        (other.hi == self.hi) & (other.lo == self.lo)\n    }\n}\n\n// Computes a multi scalar multiplication over the embedded curve.\n// For bn254, We have Grumpkin and Baby JubJub.\n// For bls12-381, we have JubJub and Bandersnatch.\n//\n// The embedded curve being used is decided by the\n// underlying proof system.\n// docs:start:multi_scalar_mul\npub fn multi_scalar_mul<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N],\n) -> EmbeddedCurvePoint\n// docs:end:multi_scalar_mul\n{\n    let point_array = multi_scalar_mul_array_return(points, scalars);\n    EmbeddedCurvePoint { x: point_array[0], y: point_array[1], is_infinite: point_array[2] as bool }\n}\n\n#[foreign(multi_scalar_mul)]\npub(crate) fn multi_scalar_mul_array_return<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N],\n) -> [Field; 3] {}\n\n// docs:start:fixed_base_scalar_mul\npub fn fixed_base_scalar_mul(scalar: EmbeddedCurveScalar) -> EmbeddedCurvePoint\n// docs:end:fixed_base_scalar_mul\n{\n    let g1 = EmbeddedCurvePoint {\n        x: 1,\n        y: 17631683881184975370165255887551781615748388533673675138860,\n        is_infinite: false,\n    };\n    multi_scalar_mul([g1], [scalar])\n}\n\n/// This function only assumes that the points are on the curve\n/// It handles corner cases around the infinity point causing some overhead compared to embedded_curve_add_not_nul and embedded_curve_add_unsafe\n// This is a hack because returning an `EmbeddedCurvePoint` from a foreign function in brillig returns a [BrilligVariable::SingleAddr; 2] rather than BrilligVariable::BrilligArray\n// as is defined in the brillig bytecode format. This is a workaround which allows us to fix this without modifying the serialization format.\n// docs:start:embedded_curve_add\npub fn embedded_curve_add(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    // docs:end:embedded_curve_add\n    let x_coordinates_match = point1.x == point2.x;\n    let y_coordinates_match = point1.y == point2.y;\n    let double_predicate = (x_coordinates_match & y_coordinates_match);\n    let infinity_predicate = (x_coordinates_match & !y_coordinates_match);\n    let point1_1 = EmbeddedCurvePoint {\n        x: point1.x + (x_coordinates_match as Field),\n        y: point1.y,\n        is_infinite: x_coordinates_match,\n    };\n    // point1_1 is guaranteed to have a different abscissa than point2\n    let mut result = embedded_curve_add_unsafe(point1_1, point2);\n    result.is_infinite = x_coordinates_match;\n\n    // dbl if x_match, y_match\n    let double = embedded_curve_add_unsafe(point1, point1);\n    result = if double_predicate { double } else { result };\n\n    // infinity if x_match, !y_match\n    if point1.is_infinite {\n        result = point2;\n    }\n    if point2.is_infinite {\n        result = point1;\n    }\n    let mut result_is_infinity = infinity_predicate & (!point1.is_infinite & !point2.is_infinite);\n    result.is_infinite = result_is_infinity | (point1.is_infinite & point2.is_infinite);\n    result\n}\n\n#[foreign(embedded_curve_add)]\nfn embedded_curve_add_array_return(\n    _point1: EmbeddedCurvePoint,\n    _point2: EmbeddedCurvePoint,\n) -> [Field; 3] {}\n\n/// This function assumes that:\n/// The points are on the curve, and\n/// The points don't share an x-coordinate, and\n/// Neither point is the infinity point.\n/// If it is used with correct input, the function ensures the correct non-zero result is returned.\n/// Except for points on the curve, the other assumptions are checked by the function. It will cause assertion failure if they are not respected.\npub fn embedded_curve_add_not_nul(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    assert(point1.x != point2.x);\n    assert(!point1.is_infinite);\n    assert(!point2.is_infinite);\n    embedded_curve_add_unsafe(point1, point2)\n}\n\n/// Unsafe ec addition\n/// If the inputs are the same, it will perform a doubling, but only if point1 and point2 are the same variable.\n/// If they have the same value but are different variables, the result will be incorrect because in this case\n/// it assumes (but does not check) that the points' x-coordinates are not equal.\n/// It also assumes neither point is the infinity point.\npub fn embedded_curve_add_unsafe(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    let point_array = embedded_curve_add_array_return(point1, point2);\n    let x = point_array[0];\n    let y = point_array[1];\n\n    EmbeddedCurvePoint { x, y, is_infinite: false }\n}\n","path":"std/embedded_curve_ops.nr"},"17":{"source":"use crate::field::field_less_than;\nuse crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\nglobal TWO_POW_64: Field = 0x10000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(mut x: Field) -> (Field, Field) {\n    // Here's we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such the field division is equivalent to integer division.\n    let low_lower_64 = (x as u64) as Field;\n    x = (x - low_lower_64) / TWO_POW_64;\n    let low_upper_64 = (x as u64) as Field;\n\n    let high = (x - low_upper_64) / TWO_POW_64;\n    let low = low_upper_64 * TWO_POW_64 + low_lower_64;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nunconstrained fn lte_hint(x: Field, y: Field) -> bool {\n    if x == y {\n        true\n    } else {\n        field_less_than(x, y)\n    }\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    // Safety: borrow is enforced to be boolean due to its type.\n    // if borrow is 0, it asserts that (alo > blo && ahi >= bhi)\n    // if borrow is 1, it asserts that (alo <= blo && ahi > bhi)\n    unsafe {\n        let borrow = lte_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size::<128>();\n        rhi.assert_max_bit_size::<128>();\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        // Safety: decomposition is properly checked below\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size::<128>();\n            xhi.assert_max_bit_size::<128>();\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(\n            // Safety: already unconstrained\n            unsafe { field_less_than(b, a) },\n        );\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unsafe in unconstrained\n        unsafe {\n            field_less_than(b, a)\n        }\n    } else if a == b {\n        false\n    } else {\n        // Safety: Take a hint of the comparison and verify it\n        unsafe {\n            if field_less_than(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{assert_gt, decompose, gt, lte_hint, PHI, PLO, TWO_POW_128};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_lte_hint() {\n        assert(lte_hint(0, 1));\n        assert(lte_hint(0, 0x100));\n        assert(lte_hint(0x100, TWO_POW_128 - 1));\n        assert(!lte_hint(0 - 1, 0));\n\n        assert(lte_hint(0, 0));\n        assert(lte_hint(0x100, 0x100));\n        assert(lte_hint(0 - 1, 0 - 1));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"18":{"source":"pub mod bn254;\nuse crate::{runtime::is_unconstrained, static_assert};\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        static_assert(\n            BIT_SIZE < modulus_num_bits() as u32,\n            \"BIT_SIZE must be less than modulus_num_bits\",\n        );\n        self.__assert_max_bit_size(BIT_SIZE);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    fn _to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n    fn _to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_le_bits\n        let bits = self._to_le_bits();\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[N - 1 - i] != p[N - 1 - i]) {\n                        assert(p[N - 1 - i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_be_bits\n        let bits = self._to_be_bits();\n\n        if !is_unconstrained() {\n            // Ensure that the decomposition does not overflow the modulus\n            let p = modulus_be_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[i] != p[i]) {\n                        assert(p[i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            static_assert(1 < radix, \"radix must be greater than 1\");\n            static_assert(radix <= 256, \"radix must be less than or equal to 256\");\n            static_assert(radix & (radix - 1) == 0, \"radix must be a power of 2\");\n        }\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // `_radix` must be less than 256\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unconstrained context\n        unsafe {\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use crate::{panic::panic, runtime};\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        // 259, in base 256, big endian, is [1, 3].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 1, 3]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        // 259, in base 256, little endian, is [3, 1].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [3, 1, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test(should_fail_with = \"radix must be greater than 1\")]\n    fn test_to_le_radix_1() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(1);\n        } else {\n            panic(f\"radix must be greater than 1\");\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be greater than 2\n    //#[test]\n    //fn test_to_le_radix_brillig_1() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(1);\n    //        crate::println(out);\n    //        let expected = [0; 8];\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test(should_fail_with = \"radix must be a power of 2\")]\n    fn test_to_le_radix_3() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(3);\n        } else {\n            panic(f\"radix must be a power of 2\");\n        }\n    }\n\n    #[test]\n    fn test_to_le_radix_brillig_3() {\n        // this test should only fail in constrained mode\n        if runtime::is_unconstrained() {\n            let field = 1;\n            let out: [u8; 8] = field.to_le_radix(3);\n            let mut expected = [0; 8];\n            expected[0] = 1;\n            assert(out == expected, \"unexpected result\");\n        }\n    }\n\n    #[test(should_fail_with = \"radix must be less than or equal to 256\")]\n    fn test_to_le_radix_512() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(512);\n        } else {\n            panic(f\"radix must be less than or equal to 256\")\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be less than 512\n    //#[test]\n    //fn test_to_le_radix_brillig_512() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(512);\n    //        let mut expected = [0; 8];\n    //        expected[0] = 1;\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n","path":"std/field/mod.nr"},"25":{"source":"use crate::default::Default;\nuse crate::hash::Hasher;\n\ncomptime global RATE: u32 = 3;\n\npub struct Poseidon2 {\n    cache: [Field; 3],\n    state: [Field; 4],\n    cache_size: u32,\n    squeeze_mode: bool, // 0 => absorb, 1 => squeeze\n}\n\nimpl Poseidon2 {\n    #[no_predicates]\n    pub fn hash<let N: u32>(input: [Field; N], message_size: u32) -> Field {\n        Poseidon2::hash_internal(input, message_size, message_size != N)\n    }\n\n    pub fn new(iv: Field) -> Poseidon2 {\n        let mut result =\n            Poseidon2 { cache: [0; 3], state: [0; 4], cache_size: 0, squeeze_mode: false };\n        result.state[RATE] = iv;\n        result\n    }\n\n    fn perform_duplex(&mut self) {\n        // add the cache into sponge state\n        for i in 0..RATE {\n            // We effectively zero-pad the cache by only adding to the state\n            // cache that is less than the specified `cache_size`\n            if i < self.cache_size {\n                self.state[i] += self.cache[i];\n            }\n        }\n        self.state = crate::hash::poseidon2_permutation(self.state, 4);\n    }\n\n    fn absorb(&mut self, input: Field) {\n        assert(!self.squeeze_mode);\n        if self.cache_size == RATE {\n            // If we're absorbing, and the cache is full, apply the sponge permutation to compress the cache\n            self.perform_duplex();\n            self.cache[0] = input;\n            self.cache_size = 1;\n        } else {\n            // If we're absorbing, and the cache is not full, add the input into the cache\n            self.cache[self.cache_size] = input;\n            self.cache_size += 1;\n        }\n    }\n\n    fn squeeze(&mut self) -> Field {\n        assert(!self.squeeze_mode);\n        // If we're in absorb mode, apply sponge permutation to compress the cache.\n        self.perform_duplex();\n        self.squeeze_mode = true;\n\n        // Pop one item off the top of the permutation and return it.\n        self.state[0]\n    }\n\n    fn hash_internal<let N: u32>(\n        input: [Field; N],\n        in_len: u32,\n        is_variable_length: bool,\n    ) -> Field {\n        let two_pow_64 = 18446744073709551616;\n        let iv: Field = (in_len as Field) * two_pow_64;\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..input.len() {\n            if i < in_len {\n                sponge.absorb(input[i]);\n            }\n        }\n\n        // In the case where the hash preimage is variable-length, we append `1` to the end of the input, to distinguish\n        // from fixed-length hashes. (the combination of this additional field element + the hash IV ensures\n        // fixed-length and variable-length hashes do not collide)\n        if is_variable_length {\n            sponge.absorb(1);\n        }\n        sponge.squeeze()\n    }\n}\n\npub struct Poseidon2Hasher {\n    _state: [Field],\n}\n\nimpl Hasher for Poseidon2Hasher {\n    fn finish(self) -> Field {\n        let iv: Field = (self._state.len() as Field) * 18446744073709551616; // iv = (self._state.len() << 64)\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..self._state.len() {\n            sponge.absorb(self._state[i]);\n        }\n        sponge.squeeze()\n    }\n\n    fn write(&mut self, input: Field) {\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for Poseidon2Hasher {\n    fn default() -> Self {\n        Poseidon2Hasher { _state: &[] }\n    }\n}\n","path":"std/hash/poseidon2.nr"},"61":{"source":"\nuse zk_amongus::{GameState, UserState, MoveData, MoveHashes, PlayerPublicInfo, PlayerPrivateInfo, move};\nuse zk_amongus::{NUM_PLAYERS, MAX_VISIBLE_SECTIONS, ROLE_CREW, ROLE_IMPOSTER, STATUS_ALIVE, STATUS_DEAD};\nuse zk_amongus::{empty_game_state, initialize_user_state, commit_to_user_secrets};\nfn main(\n    input_state: GameState,  \n    user_state: UserState, \n    move_data: MoveData,    \n) -> pub (GameState, MoveHashes) { \n\n    let r = move(input_state, user_state, move_data);\n\n    r\n}\n\n#[test]\nfn test_app_move() {\n    let mut game_state = empty_game_state();\n\n    let p0_encrypt_secret = 101;\n    let p0_mask_secret = 102;\n\n    game_state = commit_to_user_secrets(\n        game_state, \n        p0_encrypt_secret, \n        p0_mask_secret, \n        0 // Player index 0\n    );\n    \n    let p0_user_state = initialize_user_state(0, p0_encrypt_secret, p0_mask_secret);\n\n    let move_data = MoveData { target_section: 27 };\n\n    let initial_hash = game_state.hash();\n    let initial_turn_count = game_state.turn_count;\n\n    let (new_game_state, move_hashes) = main(\n        game_state, \n        p0_user_state, \n        move_data\n    );\n\n    assert_eq(initial_hash, move_hashes.input_game_state_hash);\n    assert_eq(new_game_state.hash(), move_hashes.output_game_state_hash);\n\n    assert(initial_hash != move_hashes.output_game_state_hash);\n\n    assert_eq(new_game_state.turn_count, initial_turn_count + 1);\n\n    assert_eq(new_game_state.all_players_public[p0_user_state.my_player_index].section_id, move_data.target_section);\n\n    // assert(move_hashes.input_user_state_hash != move_hashes.output_user_state_hash); \n\n    println(\"[TEST] test_app_move completed successfully.\");\n}\n","path":"/Users/lago/Desktop/joaolago1113/fogofwarr/zk_amongus_app/circuit/src/main.nr"},"62":{"source":"use dep::std;\nuse std::hash::poseidon2::Poseidon2;\n\n// Use specific imports from mpclib\nuse mpclib::selective_disclosure::selective_disclosure::{\n    consume_round_commitments, create_round_commitments, RoundState, UserOutputState,\n};\n\n// Declare core modules for Among Us game\nmod player_state;\nmod validate_move;\nmod update_vision;\n// mod api; // Comment out if moving logic directly here\n\n// Re-export necessary items for use within the crate (e.g., in api.nr) or potentially externally\n// Ensure items being re-exported are marked `pub` in their respective modules\npub use player_state::{ PlayerPublicInfo, PlayerPrivateInfo };\npub use player_state::{ MAP_SIZE, NUM_PLAYERS, MAX_VISIBLE_SECTIONS }; \npub use player_state::{ ROLE_CREW, ROLE_IMPOSTER, STATUS_ALIVE, STATUS_DEAD }; // Re-export constants\npub use validate_move::validate_adjacent_move;\npub use update_vision::calculate_visible_sections;\n\n// Keep API re-export separate if preferred\n// pub use api::{*}; // Removed wildcard export - access via api::function_name\n\n// Placeholder example function (remove or move later)\n// fn example_move_proof(...) -> UserState { ... }\n\n// NOTE: Old chess-specific code, structs (GameState, MoveHashes, etc.) \n// and functions (move, consume_opponent_move_and_update_game_state, commit_to_user_secrets)\n// defined directly in the old lib.nr have been removed.\n// Their equivalents should be defined within the `api` module, \n// using the new structs and functions from player_state, validate_move, update_vision.\n\n// --- Core Types (Mirrors fog_of_war_chess structure) ---\n\ntype RoundMpcState = RoundState<64, NUM_PLAYERS>;\npub struct GameState {\n    pub game_ended: bool, // Or maybe an enum: Ongoing, CrewWin, ImposterWin\n    pub turn_count: u32, \n    // Store the public state of all players\n    pub all_players_public: [PlayerPublicInfo; NUM_PLAYERS],\n    // Add other global state: e.g., emergency meeting status, task progress?\n    pub mpc_state: RoundMpcState, // Re-add MPC state\n}\n\nimpl std::default::Default for GameState {\n    fn default() -> Self {\n        let mut players = [PlayerPublicInfo::default(); NUM_PLAYERS];\n        for i in 0..NUM_PLAYERS {\n            players[i].game_player_index = i;\n            // Role assignment removed - Roles are private now\n            // Actual roles will be determined during initialization (e.g., via shuffle or predetermined secret)\n            players[i].section_id = 36; // Example start section\n            players[i].status = STATUS_ALIVE; \n            players[i].player_id = i as Field; \n        }\n        GameState { \n            game_ended: false, \n            turn_count: 0, \n            all_players_public: players,\n            mpc_state: RoundMpcState::default() \n        }\n    }\n}\n\n// Add commit_to_user_secrets based on user example\nimpl GameState {\n    // Use mpc_state.hash() as confirmed from mpclib source\n    pub fn hash(self) -> Field {\n        self.mpc_state.hash() \n    }\n\n    // #[export] // Cannot export from impl block\n    // Internal logic for committing secrets\n    fn commit_secrets_logic(\n        mut self, \n        encrypt_secret: Field,\n        mask_secret: Field,\n        player_index: u32,\n    ) -> GameState {\n        let encrypt_buffer = [encrypt_secret];\n        let encrypt_hash = Poseidon2::hash(encrypt_buffer, 1);\n        let mask_buffer = [mask_secret];\n        let mask_hash = Poseidon2::hash(mask_buffer, 1);\n        self.mpc_state.user_encrypt_secret_hashes[player_index] = encrypt_hash;\n        self.mpc_state.user_mask_secret_hashes[player_index] = mask_hash;\n        self \n    }\n}\n\n// Standalone exported function to commit secrets (mirrors internal logic)\n#[export]\npub fn commit_to_user_secrets(\n    game_state: GameState, \n    encrypt_secret: Field,\n    mask_secret: Field,\n    player_index: u32,\n) -> GameState {\n    // Call the internal logic\n    game_state.commit_secrets_logic(encrypt_secret, mask_secret, player_index)\n}\n\n// Adapted MoveData for Among Us\npub struct MoveData {\n    pub target_section: u32,\n}\n\n// Adapted UserState for Among Us (uses internal modules)\npub struct UserState {\n     pub my_player_index: u32, \n     pub private_info: PlayerPrivateInfo, // Now includes role\n     pub encrypt_secret: Field, // Add secret for MPC\n     pub mask_secret: Field,    // Add secret for MPC\n     // Player's view of the public state (might differ from global GameState due to visibility)\n     pub all_players_public_view: [PlayerPublicInfo; NUM_PLAYERS], \n     pub visible_sections: [u32; MAX_VISIBLE_SECTIONS], \n     // Maybe add: pub task_list: ..., pub kill_cooldown: ...\n}\n\n// Default UserState needs careful initialization based on player index\nimpl std::default::Default for UserState {\n     fn default() -> Self {\n         // Default state is somewhat meaningless without a player index context\n         // initialize_user_state function is better.\n         let invalid_section_sentinel: u32 = MAP_SIZE * MAP_SIZE; \n         let default_visible = [invalid_section_sentinel; MAX_VISIBLE_SECTIONS]; \n         UserState {\n             my_player_index: NUM_PLAYERS, // Sentinel for invalid/default\n             private_info: PlayerPrivateInfo::default(),\n             encrypt_secret: 0, // Default secret (should be replaced)\n             mask_secret: 0,    // Default secret (should be replaced)\n             all_players_public_view: [PlayerPublicInfo::default(); NUM_PLAYERS],\n             visible_sections: default_visible,\n         }\n     }\n}\n\n// Add an encode method to UserState\nimpl UserState {\n    // Encodes the player's view of everyone's public state (section and status)\n    // into a [Field; 64] buffer for commitment.\n    // Player i's section_id maps to index 2*i\n    // Player i's status maps to index 2*i + 1\n    // Pass self by value as workaround for ownership flag issue\n    pub fn encode_state_for_commitment(self) -> [Field; 64] {\n        let mut encoded = [0; 64];\n        // Ensure we don't write past the buffer if NUM_PLAYERS > 32\n        let max_players_to_encode = if NUM_PLAYERS * 2 > 64 { 32 } else { NUM_PLAYERS };\n\n        for i in 0..max_players_to_encode {\n            // Encode section_id for player i at index 2*i\n            encoded[2 * i] = self.all_players_public_view[i].section_id as Field;\n            // Encode status for player i at index 2*i + 1\n            encoded[2 * i + 1] = self.all_players_public_view[i].status as Field;\n            // Role is private and not encoded here.\n            // Player ID is implicitly known by index.\n        }\n        // Indices from max_players_to_encode*2 up to 63 remain 0.\n        encoded\n    }\n}\n\n// Adapted MoveHashes\npub struct MoveHashes {\n    pub input_game_state_hash: Field, // Hash of GameState before move\n    pub input_user_state_hash: Field, // Hash of UserState before move\n    pub output_game_state_hash: Field, // Hash of GameState after move\n    pub output_user_state_hash: Field, // Hash of UserState after move\n}\n\nimpl std::default::Default for MoveHashes {\n    fn default() -> Self {\n        MoveHashes {\n            input_game_state_hash: 0,\n            input_user_state_hash: 0,\n            output_game_state_hash: 0,\n            output_user_state_hash: 0,\n        }\n    }\n}\n\n// --- Core Functions (Mirrors fog_of_war_chess structure) ---\n\n// Public move function: takes current state, user state, move data, and player index\n// Returns the new global state and relevant hashes\n#[export]\npub fn move(\n    input_state: GameState,    // Changed: Removed 'mut', renamed to input_state\n    user_state: UserState,\n    move_data: MoveData\n) -> (GameState, MoveHashes) { // Return type remains the same\n\n    let player_index = user_state.my_player_index;\n    // Calculate input hashes\n    let input_game_state_hash = input_state.hash();\n    // Placeholder for user state hash calculation\n    let input_user_state_buffer = [user_state.private_info.encrypt_secret, user_state.private_info.mask_secret];\n    let input_user_state_hash = Poseidon2::hash(input_user_state_buffer, 2);\n\n    // 1. Assertions and Pre-conditions\n    assert_eq(input_state.game_ended, false, \"Game already ended\");\n    //assert_eq(user_state.my_player_index, player_index, \"UserState does not match player_index\");\n    // Ensure the player making the move is alive in their own view\n    let my_public_info_view = user_state.all_players_public_view[player_index];\n    assert(my_public_info_view.status == STATUS_ALIVE, \"Cannot move when dead\"); // Check against constant\n\n    // 2. Validate Move Legality (using internal module)\n    let current_section = my_public_info_view.section_id;\n    let target_section = move_data.target_section;\n    let is_valid = validate_adjacent_move(current_section, target_section, MAP_SIZE); // Re-use validation\n    assert(is_valid, \"Invalid move: Target section not adjacent\"); // Assert the result\n\n    // 3. Calculate *Intended* Next Player State (for commitment)\n    // This calculates what the user_state *would* look like after the move,\n    // primarily for determining visibility for the commitment mask.\n    // It does NOT modify the input user_state.\n    let mut intended_next_user_state = user_state; // Start with current state\n    intended_next_user_state.all_players_public_view[player_index].section_id = target_section; // Update position\n    intended_next_user_state.visible_sections = calculate_visible_sections(target_section, MAP_SIZE); // Update vision\n\n    // 4. Prepare MPC Commitment Data\n    // Encode the player's *intended* view of the public state after the move\n    let encoded_state_to_commit: [Field; 64] = intended_next_user_state.encode_state_for_commitment();\n\n    // Create visibility mask based on the *intended* post-move state\n    let mut visibility_fields: [Field; 64] = [0; 64]; // 0 = hide, 1 = reveal\n    for i in 0..NUM_PLAYERS { // Iterate through all players (global indices)\n        let opponent_global_index = i;\n        let opponent_section = intended_next_user_state.all_players_public_view[opponent_global_index].section_id;\n        let mut opponent_is_visible = false;\n        for j in 0..MAX_VISIBLE_SECTIONS {\n            if intended_next_user_state.visible_sections[j] == opponent_section {\n                opponent_is_visible = true;\n            }\n        }\n\n        // If the opponent is visible *or* if it's the player themselves, mark their fields revealable\n        if opponent_is_visible | (opponent_global_index == player_index) {\n             // Mark section_id (index 2*i) and status (index 2*i + 1) as revealable\n            visibility_fields[2 * opponent_global_index] = 1;\n            visibility_fields[2 * opponent_global_index + 1] = 1;\n        }\n    }\n    // Ensure player always reveals their own info\n    if player_index < NUM_PLAYERS { // Basic bounds check\n        visibility_fields[2 * player_index] = 1;     // Reveal own section\n        visibility_fields[2 * player_index + 1] = 1; // Reveal own status\n    }\n\n    // 5. Create MPC Commitments\n    let mut output_commitments: UserOutputState<64, NUM_PLAYERS> = create_round_commitments(\n        encoded_state_to_commit,\n        visibility_fields,\n        user_state.private_info.encrypt_secret, // Use secrets from the *input* user_state\n        user_state.private_info.mask_secret,\n        input_state.mpc_state, // Pass the *immutable* input mpc_state\n        player_index\n    );\n\n    // 6. Calculate the next MPC state using the input state's mpc_state\n    let mut output_mpc_state = input_state.mpc_state;\n    //.update2(output_commitments, player_index);\n\n    output_mpc_state.round_number += 1;\n    output_mpc_state.previous_output_states[player_index] = output_commitments;\n\n    // 7. Create the output GameState\n    // Create a mutable copy of the public player info to update it\n    let mut updated_all_players_public = input_state.all_players_public;\n    updated_all_players_public[player_index].section_id = target_section;\n\n    let output_game_state = GameState {\n        all_players_public: updated_all_players_public, // Use the updated copy\n        game_ended: input_state.game_ended, // For now, assume move doesn't end game\n        mpc_state: output_mpc_state,        // Use the newly calculated MPC state\n        turn_count: input_state.turn_count + 1, // Increment turn count\n    };\n\n    // 8. Calculate Output Hashes\n    let output_game_state_hash = output_game_state.hash();\n    // User state hash should reflect the state *before* consumption,\n    // which is encoded in `encoded_state_to_commit`.\n    let output_user_state_hash = Poseidon2::hash(encoded_state_to_commit, encoded_state_to_commit.len());\n\n    // 9. Return updated global state and hashes\n    let move_hashes = MoveHashes {\n        input_game_state_hash: input_game_state_hash,\n        input_user_state_hash: input_user_state_hash, // Hash of input user state secrets\n        output_game_state_hash: output_game_state_hash, // Hash of the new game state\n        output_user_state_hash: output_user_state_hash, // Hash of the committed user view\n    };\n\n    (output_game_state, move_hashes)\n}\n\n// Initializer for GameState\n#[export]\npub fn empty_game_state() -> GameState {\n     GameState::default() // IMPLICIT return\n}\n\n// Initializer for UserState\n#[export]\npub fn initialize_user_state(player_index: u32, encrypt_secret: Field, mask_secret: Field) -> UserState {\n    let my_role = if player_index < 2 { ROLE_IMPOSTER } else { ROLE_CREW };\n    let initial_global_state = GameState::default();\n    let my_start_section = initial_global_state.all_players_public[player_index].section_id;\n    let initial_visible_sections = calculate_visible_sections(my_start_section, MAP_SIZE);\n    let mut initial_view = [PlayerPublicInfo::default(); NUM_PLAYERS];\n    \n    for i in 0..NUM_PLAYERS {\n        let other_player_global_info = initial_global_state.all_players_public[i];\n        let other_player_section = other_player_global_info.section_id;\n        let mut player_can_be_seen = false; \n        for j in 0..MAX_VISIBLE_SECTIONS {\n             if initial_visible_sections[j] == other_player_section {\n                 player_can_be_seen = true;\n             }\n        }\n\n        if i == player_index {\n            initial_view[i] = other_player_global_info;\n        } else { \n            if player_can_be_seen {\n                 initial_view[i] = other_player_global_info;\n            } else {\n                let mut masked_info = PlayerPublicInfo::default();\n                masked_info.game_player_index = i; \n                masked_info.section_id = MAP_SIZE * MAP_SIZE; \n                masked_info.status = other_player_global_info.status; \n                initial_view[i] = masked_info; \n            }\n        }\n    }\n\n    let user_state = UserState {\n        my_player_index: player_index,\n        private_info: PlayerPrivateInfo { \n            role: my_role, \n            encrypt_secret: encrypt_secret, \n            mask_secret: mask_secret, \n            voted_for_index: NUM_PLAYERS \n        },\n        encrypt_secret: encrypt_secret, \n        mask_secret: mask_secret,\n        all_players_public_view: initial_view, \n        visible_sections: initial_visible_sections,\n    };\n    \n     user_state \n}\n\n// Function to update a player's local UserState based on the global GameState's MPC commitments\n#[export]\npub fn consume_global_state_and_update_local_view(\n    current_local_user_state: UserState, \n    global_game_state: GameState,      \n) -> UserState {                        \n\n    let my_player_index = current_local_user_state.my_player_index;\n\n    // --- Consume Commitments --- \n    let revealed_state_data_nested: [[Option<Field>; 64]; NUM_PLAYERS - 1] = consume_round_commitments(\n        current_local_user_state.mask_secret, \n        global_game_state.mpc_state,             \n        my_player_index \n    );\n\n    // --- Update View --- \n    let mut updated_user_state = current_local_user_state;\n    \n    // Keep track of which opponent index maps to which nested array index\n    let mut opponent_array_index = 0; \n\n    for opponent_global_index in 0..NUM_PLAYERS {\n        if opponent_global_index != my_player_index {\n            // Get the revealed Option<Field> array for this specific opponent\n            let revealed_opponent_options: [Option<Field>; 64] = revealed_state_data_nested[opponent_array_index];\n            \n            // Get a mutable reference to our current view of this opponent\n            let mut current_opponent_view = updated_user_state.all_players_public_view[opponent_global_index];\n\n            // Decode revealed section_id (encoded at index 2 * opponent_global_index)\n            let section_index = 2 * opponent_global_index;\n            if section_index < 64 { // Bounds check\n                if revealed_opponent_options[section_index].is_some() {\n                    // Revealed: Update section_id in our view\n                    current_opponent_view.section_id = revealed_opponent_options[section_index].unwrap_unchecked() as u32;\n                } // else: Not revealed, keep existing section_id view (potentially masked/stale)\n            }\n\n            // Decode status (encoded at index 2 * opponent_global_index + 1)\n            let status_index = section_index + 1;\n            if status_index < 64 { // Bounds check\n                if revealed_opponent_options[status_index].is_some() {\n                    // Revealed: Update status in our view\n                    current_opponent_view.status = revealed_opponent_options[status_index].unwrap_unchecked() as u32;\n                } // else: Not revealed, keep existing status view (potentially masked/stale)\n            }\n\n            // NOTE: Other fields (indices not 2*i or 2*i+1) were not encoded in the first place,\n            // so we don't need to decode them.\n\n            // --- Update the main view array with the potentially updated opponent view ---\n            updated_user_state.all_players_public_view[opponent_global_index] = current_opponent_view;\n            \n            // Increment index for the revealed_state_data_nested array\n            opponent_array_index += 1;\n        }\n    }\n\n    // --- Update Our Own Public View Info ---\n    // Ensure our own view reflects the latest public global state for ourselves,\n    // as our state isn't revealed via consume_round_commitments.\n    updated_user_state.all_players_public_view[my_player_index] = global_game_state.all_players_public[my_player_index];\n\n    // --- Recalculate Visibility --- \n    let my_updated_section = updated_user_state.all_players_public_view[my_player_index].section_id;\n    updated_user_state.visible_sections = calculate_visible_sections(my_updated_section, MAP_SIZE);\n\n    // --- Optional: Re-masking based on new visibility (can be complex) ---\n    // This logic might be needed if players can move *out* of view and their info should be hidden again.\n    // For now, we rely on the initial decoding providing the correct visible state.\n\n    // --- Return Updated State --- \n    updated_user_state \n}\n","path":"/Users/lago/Desktop/joaolago1113/fogofwarr/zk_amongus/src/lib.nr"},"64":{"source":"use crate::player_state::{MAP_SIZE, MAX_VISIBLE_SECTIONS, NUM_PLAYERS};\nuse dep::std;\n\n// Calculates the set of visible sections for a player based on simple adjacency.\n// Includes the player's own section.\n// Returns an array of size MAX_VISIBLE_SECTIONS, padded with invalid_section_sentinel for invalid/out-of-bounds sections.\npub fn calculate_visible_sections(\n    player_section: u32, \n    map_size: u32\n) -> [u32; MAX_VISIBLE_SECTIONS] {\n    \n    let invalid_section_sentinel: u32 = map_size * map_size; // Use same sentinel as default\n    let mut visible_sections = [invalid_section_sentinel; MAX_VISIBLE_SECTIONS];\n    let mut visible_count: u32 = 0; \n\n    let player_x: u32 = player_section % map_size;\n    let player_y: u32 = player_section / map_size;\n\n    // Iterate through the 3x3 grid centered on the player\n    for y_offset_idx in 0..3 { // y_offset = -1, 0, 1 maps to index 0, 1, 2\n        for x_offset_idx in 0..3 { // x_offset = -1, 0, 1 maps to index 0, 1, 2\n            let y_offset: i64 = (y_offset_idx as i64) - 1;\n            let x_offset: i64 = (x_offset_idx as i64) - 1;\n\n            let current_x_signed: i64 = (player_x as i64) + x_offset;\n            let current_y_signed: i64 = (player_y as i64) + y_offset;\n\n            // Boundary checks\n            if current_x_signed >= 0 & current_x_signed < (map_size as i64) & \n               current_y_signed >= 0 & current_y_signed < (map_size as i64) \n            {\n                // Convert back to u32 if within bounds\n                let current_x = current_x_signed as u32;\n                let current_y = current_y_signed as u32;\n                let section_id = current_y * map_size + current_x;\n                \n                // Add to visible sections if there's space\n                if visible_count < MAX_VISIBLE_SECTIONS {\n                    visible_sections[visible_count] = section_id;\n                    visible_count = visible_count + 1;\n                }\n            }\n        }\n    }\n\n    visible_sections\n}\n\n// Test case (replace old ones)\n#[test]\nfn test_visibility_center() {\n    let map_s: u32 = 8;\n    let invalid_sentinel: u32 = map_s * map_s;\n    // Center section for 8x8 is 27 (3,3) or 36 (4,4). Let's use 36.\n    let center_section: u32 = (map_s / 2) * map_s + (map_s / 2);\n    let visible = calculate_visible_sections(center_section, map_s);\n    \n    // Expected sections for center (4,4) are: 27, 28, 29, 35, 36, 37, 43, 44, 45\n    let expected = [27, 28, 29, 35, 36, 37, 43, 44, 45];\n    let mut count = 0;\n    for i in 0..MAX_VISIBLE_SECTIONS {\n        if visible[i] != invalid_sentinel { // Use sentinel for check\n            let mut found = false;\n            for j in 0..expected.len() {\n                if visible[i] == expected[j] {\n                    found = true;\n                }\n            }\n            // Check after inner loop completes\n            assert(found, \"Visible section not in expected list\");\n            count += 1;\n        }\n    }\n    assert(count == expected.len(), \"Incorrect number of visible sections\");\n}\n\n#[test]\nfn test_visibility_corner() {\n    let map_s: u32 = 8;\n    let invalid_sentinel: u32 = map_s * map_s;\n    let corner_section: u32 = 0; // Top-left corner (0,0)\n    let visible = calculate_visible_sections(corner_section, map_s);\n    \n    // Expected sections for corner (0,0) are: 0, 1, 8, 9\n    let expected = [0, 1, 8, 9];\n    let mut count = 0;\n    let mut sorted_visible = [invalid_sentinel; MAX_VISIBLE_SECTIONS]; // Use sentinel\n    let mut k: u32 = 0; // Ensure k is u32\n\n    // Collect valid visible sections\n    for i in 0..MAX_VISIBLE_SECTIONS {\n         if visible[i] != invalid_sentinel { // Use sentinel\n             assert(k < MAX_VISIBLE_SECTIONS, \"Exceeded visible section buffer\"); // Safety check\n             sorted_visible[k] = visible[i];\n             k += 1;\n         }\n    }\n     // Basic check for count and presence\n     assert(k == (expected.len() as u32), \"Incorrect number of visible sections for corner\");\n     for i in 0..expected.len() {\n         let mut found = false;\n         for j in 0..k {\n             if sorted_visible[j] == expected[i] {\n                 found = true;\n             }\n         }\n         // Check after inner loop completes\n         assert(found, \"Expected corner section not found\");\n     }\n}\n\n// Remove old chess vision functions and tests\n// pub(crate) fn update_vision(...) { ... }\n// fn update_vision_for_pawn(...) { ... }\n// #[test] fn test_piece_data() { ... }\n","path":"/Users/lago/Desktop/joaolago1113/fogofwarr/zk_amongus/src/update_vision.nr"},"65":{"source":"use dep::std;\n\n// Import constants\nuse crate::player_state::{MAP_SIZE};\n\n// Validates if a move between two sections is adjacent (including diagonals)\n// or the same, and within the map boundaries.\n// Returns true if valid, otherwise asserts internally.\n// Make pub so it can be re-exported\npub fn validate_adjacent_move(\n    from_section: u32, \n    to_section: u32, \n    map_size: u32 // Pass map_size explicitly for flexibility\n) -> bool {\n    \n    let is_same_section = from_section == to_section;\n\n    // Calculate coordinates\n    let from_x = from_section % map_size;\n    let from_y = from_section / map_size; // Integer division\n    let to_x = to_section % map_size;\n    let to_y = to_section / map_size;\n\n    // Check boundaries for destination (only if not the same section, though asserting always is fine)\n    assert(to_x < map_size, \"Move destination X out of bounds\");\n    assert(to_y < map_size, \"Move destination Y out of bounds\");\n\n    // Calculate signed differences\n    let dx_signed: i64 = (to_x as i64) - (from_x as i64);\n    let dy_signed: i64 = (to_y as i64) - (from_y as i64);\n\n    // Check if the move distance is at most 1 in each direction (allows adjacent + diagonal)\n    let is_dx_valid = (dx_signed >= -1) & (dx_signed <= 1);\n    let is_dy_valid = (dy_signed >= -1) & (dy_signed <= 1);\n    let is_adjacent = is_dx_valid & is_dy_valid; \n\n    // The move is valid if it's to the same section OR an adjacent one.\n    let is_valid_move = is_same_section | is_adjacent;\n\n    assert(is_valid_move, \"Move target is not the same or an adjacent section\");\n\n    // Return the boolean result (useful if called from unconstrained context maybe)\n    is_valid_move \n}\n\n// Remove old chess validation functions\n// pub(crate) fn validate_move_and_update_board_state(...) { ... }\n// fn get_piece_at_unsafe(...) { ... }\n// fn is_square_attacked(...) { ... }\n// ... etc ...\n","path":"/Users/lago/Desktop/joaolago1113/fogofwarr/zk_amongus/src/validate_move.nr"},"68":{"source":"/// Given an initial secret Field element, expand it into `N` uniformly randomly distributed field elements\npub(crate) fn expand_secret<let N: u32>(secret: Field) -> [Field; N] {\n    let mut rolling_secret: [Field; 2] = [0, secret];\n    let mut r: [Field; N] = [0; N];\n    for i in 0..N {\n        r[i] = std::hash::poseidon2::Poseidon2::hash(rolling_secret, 2);\n        rolling_secret[1] += 1;\n    }\n    r\n}\n\npub(crate) fn symmetric_encrypt<let N: u32>(plaintext: [Field; N], secret: Field) -> [Field; N] {\n    let mut ciphertext: [Field; N] = [0; N];\n\n    let secrets: [Field; N] = expand_secret(secret);\n    for i in 0..N {\n        ciphertext[i] = secrets[i] + plaintext[i];\n    }\n    ciphertext\n}\n\npub(crate) fn symmetric_decrypt(\n    ciphertext: [Field; 2],\n    secret: Field,\n) -> std::option::Option<Field> {\n    let mut r: std::option::Option<Field> = std::option::Option::default();\n    let mut decrypted_text: [Field; 2] = [0; 2];\n\n    let secrets: [Field; 2] = expand_secret(secret);\n    for i in 0..2 {\n        decrypted_text[i] = ciphertext[i] - secrets[i];\n    }\n\n    let is_real = decrypted_text[0] == 0;\n\n    if is_real {\n        r = std::option::Option::some(decrypted_text[1]);\n    } else {\n        r = std::option::Option::none();\n    }\n    r\n}\n\nuse std::embedded_curve_ops::EmbeddedCurvePoint as Point;\n\npub struct Ciphertext<let N: u32> {\n    data: [Field; N * 2],\n}\n\nimpl<let N: u32> std::default::Default for Ciphertext<N> {\n    fn default() -> Self {\n        Ciphertext { data: [0; 2 * N] }\n    }\n}\n\npub(crate) fn trial_decrypt<let N: u32>(\n    possible_encryption_keys: [Point; N],\n    ciphertext: Ciphertext<N>,\n) -> [Option<Field>; N] {\n    let mut possible_plaintext: [Option<Field>; N] = [Option::default(); N];\n    for i in 0..N {\n        possible_plaintext[i] = symmetric_decrypt(\n            [ciphertext.data[2 * i], ciphertext.data[2 * i + 1]],\n            possible_encryption_keys[i].x,\n        );\n    }\n    possible_plaintext\n}\n","path":"/Users/lago/nargo/github.com/zac-williamson/mpclib/main/src/common/crypto.nr"},"73":{"source":"use std::embedded_curve_ops::{\n    embedded_curve_add_unsafe, EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul,\n};\nuse std::hash::poseidon2::Poseidon2::hash as poseidon2;\n\nuse crate::common::crypto::{Ciphertext, expand_secret, symmetric_encrypt, trial_decrypt};\n\nuse bignum::{BigNumTrait, BN254_Fq};\n\ntype Point = EmbeddedCurvePoint;\n\npub global G: Point = Point {\n    x: 0x083e7911d835097629f0067531fc15cafd79a89beecb39903f69572c636f4a5a,\n    y: 0x1a7f5efaad7f315c25a918f30cc8d7333fccab7ad7c90f14de81bcc528f9935d,\n    is_infinite: false,\n};\n\nglobal H: Point = Point {\n    x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n    y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n    is_infinite: false,\n};\n\npub struct RoundState<let NumEntries: u32, let NumParticipants: u32> {\n    pub round_number: u32,\n    pub user_encrypt_secret_hashes: [Field; NumParticipants],\n    pub user_mask_secret_hashes: [Field; NumParticipants],\n    pub previous_output_states: [UserOutputState<NumEntries, NumParticipants>; NumParticipants],\n}\n\npub struct UserOutputState<let NumEntries: u32, let NumParticipants: u32> {\n    ciphertext: Ciphertext<NumEntries>,\n    mask_commitments: [Point; NumEntries],\n    user_updated_mask_commitments: [[Point; NumEntries]; NumParticipants],\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> std::default::Default for UserOutputState<NumEntries, NumParticipants> {\n    fn default() -> Self {\n        UserOutputState {\n            ciphertext: Ciphertext::default(),\n            mask_commitments: [Point::point_at_infinity(); NumEntries],\n            user_updated_mask_commitments: [\n                [Point::point_at_infinity(); NumEntries]; NumParticipants\n            ],\n        }\n    }\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> UserOutputState<NumEntries, NumParticipants> {\n\n    pub fn flatten(self: Self) -> [Field; NumEntries * (NumParticipants + 2) * 2] {\n        let mut flattened_data: [Field; NumEntries * (NumParticipants + 2) * 2] =\n            [0; NumEntries * (NumParticipants + 2) * 2];\n\n        for i in 0..NumEntries {\n            flattened_data[i * 2] = self.ciphertext.data[2 * i];\n            flattened_data[i * 2 + 1] = self.ciphertext.data[2 * i + 1];\n\n            flattened_data[NumEntries * 2 + i * 2] = self.mask_commitments[i].x;\n            flattened_data[NumEntries * 2 + i * 2 + 1] = self.mask_commitments[i].y;\n        }\n\n        let offset: u32 = NumEntries * 4;\n        for i in 0..NumParticipants {\n            for j in 0..NumEntries {\n                flattened_data[offset + (i * NumEntries * 2) + j * 2] =\n                    self.user_updated_mask_commitments[i][j].x;\n                flattened_data[offset + (i * NumEntries * 2) + j * 2 + 1] =\n                    self.user_updated_mask_commitments[i][j].y;\n                // TODO I think its ok to not include point at infinity here in the hash?\n            }\n        }\n        flattened_data\n    }\n    pub fn hash(self: Self) -> Field {\n        std::hash::poseidon2::Poseidon2::hash(\n            self.flatten(),\n            NumEntries * (NumParticipants + 2) * 2,\n        )\n    }\n}\n\npub fn commit<let N: u32>(plaintext: [Field; N], secret: Field) -> Ciphertext<N> {\n    let secrets: [Field; N] = expand_secret(secret);\n\n    let mut encryption_keys: [Point; N] = [Point::point_at_infinity(); N];\n    let mut ciphertext: Ciphertext<N> = Ciphertext::default();\n    for i in 0..N {\n        encryption_keys[i] = multi_scalar_mul([G], [EmbeddedCurveScalar::from_field(secrets[i])]);\n        let encrypted = symmetric_encrypt([0, plaintext[i]], encryption_keys[i].x);\n        ciphertext.data[2 * i] = encrypted[0];\n        ciphertext.data[2 * i + 1] = encrypted[1];\n    }\n    ciphertext\n}\n\npub fn commit_mask<let N: u32>(reveal_vector: [Field; N], masking_secret: Field) -> [Point; N] {\n    // if reveal_vector[i] = true, use G1, else use G2\n    let secrets: [Field; N] = expand_secret(masking_secret);\n    // let mut base_points: [Point; N] = [Point::point_at_infinity(); N];\n    // for i in 0..N {\n    //     base_points[i] = G.conditional_assign(H, reveal_vector[i]);\n    // }\n    let mut masking_keys: [Point; N] = [Point::point_at_infinity(); N];\n\n    // embedded_curve_add_unsafe\n    for i in 0..N {\n        masking_keys[i] = multi_scalar_mul([G], [EmbeddedCurveScalar::from_field(secrets[i])]);\n\n        // we can use an unsafe add op here because masking_keys[i] is a function of [G], and colliding with [H] would require solving the dlog problem\n        let alternative_masking_key = embedded_curve_add_unsafe(masking_keys[i], H);\n\n        masking_keys[i].x = (masking_keys[i].x - alternative_masking_key.x) * reveal_vector[i]\n            + alternative_masking_key.x;\n        masking_keys[i].y = (masking_keys[i].y - alternative_masking_key.y) * reveal_vector[i]\n            + alternative_masking_key.y;\n    }\n\n    masking_keys\n}\n\npub fn update_mask<let N: u32>(masking_keys: [Point; N], encrypt_secret: Field) -> [Point; N] {\n    let secrets: [Field; N] = expand_secret(encrypt_secret);\n    let mut updated_masking_keys: [Point; N] = [Point::point_at_infinity(); N];\n    for i in 0..N {\n        updated_masking_keys[i] = multi_scalar_mul(\n            [masking_keys[i]],\n            [EmbeddedCurveScalar::from_field(secrets[i])],\n        );\n    }\n    updated_masking_keys\n}\n\npub fn reveal_mask<let N: u32>(\n    updated_masking_keys: [Point; N],\n    masking_secret: Field,\n) -> [Point; N] {\n    let mut masking_secrets: [Field; N] = expand_secret(masking_secret);\n    //   println(f\"final masking secrets {inverse_masking_secrets}\");\n    let mut inverse_masking_secrets: [BN254_Fq; N] = [BN254_Fq::new(); N];\n\n    // oh arse we need to invert in the bn254 field\n    for i in 0..N {\n        let secret_bn = BN254_Fq::from(masking_secrets[i]);\n        let inverse = BN254_Fq::one() / secret_bn;\n        inverse_masking_secrets[i] = inverse;\n    }\n\n    let mut possible_encryption_keys: [Point; N] = [Point::point_at_infinity(); N];\n    for i in 0..N {\n        let bit_limbs = inverse_masking_secrets[i].limbs;\n        // 120, 120, 120\n        let low_120 = bit_limbs[0] as Field;\n        let mid_120 = bit_limbs[1] as Field;\n        let mid_bytes = (mid_120 as Field).to_le_bytes::<15>();\n        let low_128 = low_120 + (mid_bytes[0] as Field) * 0x1000000000000000000000000000000;\n\n        let remainder_mid_112 = (mid_120 - (mid_bytes[0] as Field)) / 0x100;\n\n        let high_16 = bit_limbs[2] as Field;\n\n        let high_128 = remainder_mid_112 + high_16 * 0x10000000000000000000000000000;\n        possible_encryption_keys[i] = multi_scalar_mul(\n            [updated_masking_keys[i]],\n            [EmbeddedCurveScalar::new(low_128, high_128)],\n        );\n    }\n    possible_encryption_keys\n}\n\npub fn create_round_commitments<let NumEntries: u32, let NumParticipants: u32>(\n    user_plaintext: [Field; NumEntries],\n    reveal_vector: [Field; NumEntries],\n    encrypt_secret: Field,\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    user_index: u32,\n) -> UserOutputState<NumEntries, NumParticipants> {\n    let mut r: UserOutputState<NumEntries, NumParticipants> = UserOutputState::default();\n    for i in 0..NumParticipants {\n        if (i != user_index) {\n            r.user_updated_mask_commitments[i] = update_mask(\n                round_state.previous_output_states[i].mask_commitments,\n                encrypt_secret,\n            );\n        }\n    }\n    r.ciphertext = commit(user_plaintext, encrypt_secret);\n    r.mask_commitments = commit_mask(reveal_vector, masking_secret);\n    r\n}\n\npub fn consume_round_commitments<let NumEntries: u32, let NumParticipants: u32>(\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    user_index: u32,\n) -> [[Option<Field>; NumEntries]; NumParticipants - 1] {\n    let mut count: Field = 0;\n\n    let mut target_plaintexts: [[Option<Field>; NumEntries]; NumParticipants - 1] =\n        [[Option::default(); NumEntries]; NumParticipants - 1];\n    for i in 0..NumParticipants {\n        if (i != user_index) {\n            let decryption_keys = reveal_mask(\n                round_state.previous_output_states[i].user_updated_mask_commitments[user_index],\n                masking_secret,\n            );\n            let plaintexts = trial_decrypt(\n                decryption_keys,\n                round_state.previous_output_states[i].ciphertext,\n            );\n            target_plaintexts[count] = plaintexts;\n            count += 1;\n        }\n    }\n    target_plaintexts\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> std::default::Default for RoundState<NumEntries, NumParticipants> {\n    fn default() -> Self {\n        RoundState {\n            round_number: 0,\n            user_encrypt_secret_hashes: [0; NumParticipants],\n            user_mask_secret_hashes: [0; NumParticipants],\n            previous_output_states: [UserOutputState::default(); NumParticipants],\n        }\n    }\n}\nimpl<let NumEntries: u32, let NumParticipants: u32> RoundState<NumEntries, NumParticipants> {\n\n    pub fn hash(self) -> Field {\n        let mut flattened_data: [Field; NumParticipants * 3 + 1] = [0; NumParticipants * 3 + 1];\n\n        for i in 0..NumParticipants {\n            flattened_data[3 * i] = self.user_encrypt_secret_hashes[i];\n            flattened_data[3 * i + 1] = self.user_mask_secret_hashes[i];\n            flattened_data[3 * i + 2] = self.previous_output_states[i].hash();\n        }\n        flattened_data[NumParticipants * 3] = self.round_number as Field - 1;\n\n        std::hash::poseidon2::Poseidon2::hash(flattened_data, NumParticipants * 3 + 1)\n    }\n\n    pub fn update2(\n        self,\n        new_output_state: UserOutputState<NumEntries, NumParticipants>,\n        user_index: u32,\n    ) -> Self {\n        let mut updated = self;\n\n        updated.round_number += 1;\n        updated.previous_output_states[user_index] = new_output_state;\n        updated\n    }\n    pub fn update(\n        self,\n        new_output_states: [UserOutputState<NumEntries, NumParticipants>; NumParticipants],\n    ) -> Self {\n        let mut updated = self;\n\n        updated.round_number += 1;\n        updated.previous_output_states = new_output_states;\n        updated\n    }\n}\n\npub fn execute_round<let NumEntries: u32, let NumParticipants: u32>(\n    user_plaintext: [Field; NumEntries],\n    reveal_vector: [Field; NumEntries],\n    encrypt_secret: Field,\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    previous_round_hash: Field,\n    user_index: u32,\n    ) -> (UserOutputState<NumEntries, NumParticipants>, [[Option<Field>; NumEntries]; NumParticipants - 1]) {\n    std::assert_constant(user_index);\n\n    // when used inside a Noir program, previous_round_hash should be sourced from a pub variable\n    assert_eq(previous_round_hash, round_state.hash());\n\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([encrypt_secret, -1], 2),\n        round_state.user_encrypt_secret_hashes[user_index],\n    );\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([masking_secret, -1], 2),\n        round_state.user_mask_secret_hashes[user_index],\n    );\n    let state = create_round_commitments(\n        user_plaintext,\n        reveal_vector,\n        encrypt_secret,\n        masking_secret,\n        round_state,\n        user_index,\n    );\n\n    let plaintexts = consume_round_commitments(masking_secret, round_state, user_index);\n\n    (state, plaintexts)\n}\n\n#[test]\nfn test_execute_round() {\n    let alice_secret = std::hash::poseidon2::Poseidon2::hash([0], 1);\n    let alice_mask = std::hash::poseidon2::Poseidon2::hash([1], 1);\n    let bob_secret = std::hash::poseidon2::Poseidon2::hash([2], 1);\n    let bob_mask = std::hash::poseidon2::Poseidon2::hash([3], 1);\n\n    let round_state: RoundState<4, 2> = RoundState {\n        round_number: 1,\n        user_encrypt_secret_hashes: [\n            poseidon2([alice_secret, -1], 2),\n            poseidon2([bob_secret, -1], 2),\n        ],\n        user_mask_secret_hashes: [poseidon2([alice_mask, -1], 2), poseidon2([bob_mask, -1], 2)],\n        previous_output_states: [UserOutputState::default(); 2],\n    };\n\n    let previous_round_hash = round_state.hash();\n    let alice_state = [0, 1, 2, 3];\n    let alice_reveal = [0, 1, 0, 1];\n    let bob_state = [-1, -2, -3, -4];\n    let bob_reveal = [1, 0, 1, 0];\n\n    // after executing. we have ciphertexts and mask commitments, but no mask reveal commitments\n    let alice_output = execute_round(\n        alice_state,\n        alice_reveal,\n        alice_secret,\n        alice_mask,\n        round_state,\n        previous_round_hash,\n        0,\n    );\n\n    let round_state = round_state.update([alice_output.0, round_state.previous_output_states[1]]);\n    let previous_round_hash = round_state.hash();\n\n    let bob_output = execute_round(\n        bob_state,\n        bob_reveal,\n        bob_secret,\n        bob_mask,\n        round_state,\n        previous_round_hash,\n        1,\n    );\n\n    let round_state = round_state.update([round_state.previous_output_states[0], bob_output.0]);\n    let previous_round_hash = round_state.hash();\n\n    let alice_output = execute_round(\n        alice_state,\n        alice_reveal,\n        alice_secret,\n        alice_mask,\n        round_state,\n        previous_round_hash,\n        0,\n    );\n\n    let round_state = round_state.update([alice_output.0, round_state.previous_output_states[1]]);\n    let previous_round_hash = round_state.hash();\n\n    let bob_output = execute_round(\n        bob_state,\n        bob_reveal,\n        bob_secret,\n        bob_mask,\n        round_state,\n        previous_round_hash,\n        1,\n    );\n\n    let alice_decrypted = alice_output.1[0];\n    let bob_decrypted = bob_output.1[0];\n\n    assert_eq(alice_decrypted[0].is_some(), false);\n    assert_eq(alice_decrypted[1].is_some(), true);\n    assert_eq(alice_decrypted[2].is_some(), false);\n    assert_eq(alice_decrypted[3].is_some(), true);\n\n    assert_eq(alice_decrypted[1].unwrap_unchecked(), -2);\n    assert_eq(alice_decrypted[3].unwrap_unchecked(), -4);\n\n    assert_eq(bob_decrypted[0].is_some(), true);\n    assert_eq(bob_decrypted[1].is_some(), false);\n    assert_eq(bob_decrypted[2].is_some(), true);\n    assert_eq(bob_decrypted[3].is_some(), false);\n\n    assert_eq(bob_decrypted[0].unwrap_unchecked(), 0);\n    assert_eq(bob_decrypted[2].unwrap_unchecked(), 2);\n}\n\n/// This doesn't really do anything by ensures that there is a test for CI to run.\n#[test]\nfn smoke_test() {\n    let plaintext: [Field; 3] = [0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, 123, -1];\n    let bob_reveal_vector: [Field; 3] = [0, 1, 1];\n\n    let alice_encrypt_secret: Field = std::hash::poseidon2::Poseidon2::hash([0], 1);\n\n    let bob_masking_secret: Field = std::hash::poseidon2::Poseidon2::hash([2], 1);\n\n    // Round 1a: Alice generates the ciphertext that describes her hidden state, sends to Bob\n    let ciphertext = commit(plaintext, alice_encrypt_secret);\n\n    // Round 1b: Bob generates commitment mask that describes which parts of the state he is entitled to see, sends to Alice\n    let bob_masking_keys = commit_mask(bob_reveal_vector, bob_masking_secret);\n\n    // Round 2: Alice uses Bob's commitment mask to create a hidden version of her encryption keys, sends to Bob\n    let alice_masking_update = update_mask(bob_masking_keys, alice_encrypt_secret);\n\n    // Round 3: Bob removes his masking component from Alice's updated mask to produce partial decryption keys\n    let partial_decrypt_keys = reveal_mask(alice_masking_update, bob_masking_secret);\n\n    // (still round 3): Bob uses the partial decryption keys to decrypt the part of Alice's state he is entitled to see\n    let partial_plaintext = trial_decrypt(partial_decrypt_keys, ciphertext);\n\n    assert_eq(partial_plaintext[0].is_some(), false);\n    assert_eq(partial_plaintext[1].is_some(), true);\n    assert_eq(partial_plaintext[2].is_some(), true);\n\n    assert_eq(partial_plaintext[1].unwrap_unchecked(), 123);\n    assert_eq(partial_plaintext[2].unwrap_unchecked(), -1);\n}\n","path":"/Users/lago/nargo/github.com/zac-williamson/mpclib/main/src/selective_disclosure/selective_disclosure.nr"}},"names":["main"],"brillig_names":["decompose_hint","lte_hint","directive_invert","directive_integer_quotient"]}